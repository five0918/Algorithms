# 选择排序

思路：首先找到最小的元素，其次将它和数组的第一个元素交换位置（如果第一个位置就是最小的元素那么它和自己交换）。再次，在剩下的元素中找最小的元素，将它与数组的第二个元素交换位置。这就是选择排序，因为它在不断在数组中选择最小的元素。

选择排序的内层循环只是不断让当前元素与最小元素与目前已知的最小元素做比较（以及将当前元素索引加1和检查是否代码越界）。交换元素的代码写在内循环之外，每次交换都能排定一个元素，因此交换的总次数是N。所以算法的时间效率取决于比较的次数。

切记：
1. **交换两个元素的位置。而不是交换两个值。这是一个关键点。**
2. **再次注意min=i要放在外层循环里面，内存循环外面，交换元素的位置也要放在内层循环外面，外层循环里面。**


```java
import java.util.*;

public class Select_Sort{
	//切记本题是交换数组中两个元素的位置，而不是交换两个数的值，否则会出错的。
	public static void swap(int[] array,int a,int b){
		int temp=array[a];
		array[a]=array[b];
		array[b]=temp;
	}

	public static void select_sort(int[] array){
		int N=array.length;
		for (int i=0;i<N;i++) {
			//将a[i]he a[i+1...N]中最小元素交换
			int min=i;//最小元素的索引
			for (int j=i+1;j<N;j++) {
				if (array[j]<array[min]) {
					min=j;
				}
			}
			swap(array,i,min);
		}
	}

	public static void main(String[] args) {
		int[] arr={3,44,38,5,47,15,36,26,27,2,46,4,19,50,48};
		System.out.println("排序前:");
		for (int n :arr ) {
			System.out.print(n+" ");
		}
		select_sort(arr);
		System.out.println("\n排序后:");
		for (int n :arr ) {
			System.out.print(n+" ");
		}
	}
}
```
